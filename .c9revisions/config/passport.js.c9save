{"ts":1363651661534,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1363652016823,"patch":[[{"diffs":[[1,"var mongoose = require('mongoose');\nvar passport = require('passport')\n  , GoogleStrategy = require('passport-google-oauth').Strategy;\nvar User = mongoose.model('User');"]],"start1":0,"start2":0,"length1":0,"length2":169}]],"length":169,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363695506322,"patch":[[{"diffs":[[0,"'User');"],[1,"\n\nmodule.exports = function (passport, config) {\n  // require('./initializer')\n\n  // serialize sessions\n  passport.serializeUser(function(user, done) {\n    done(null, user.id);\n  });\n\n  passport.deserializeUser(function(id, done) {\n    User.findById(id, function (err, user) {\n      done(err, user);\n    });\n  });\n  "]],"start1":161,"start2":161,"length1":8,"length2":324}]],"length":485,"saved":false}
{"ts":1363695633706,"patch":[[{"diffs":[[0,"    });\n  });\n  "],[1,"\n  passport.use(new GoogleStrategy({\n      consumerKey: config.google.clientID,\n      consumerSecret: config.google.clientSecret,\n      callbackURL: config.google.callbackURL\n    },\n    function(accessToken, refreshToken, profile, done) {\n      User.findOne({ 'google.id': profile.id }, function (err, user) {\n        if (!user) {\n          user = new User({\n              name: profile.displayName\n            , email: profile.emails[0].value\n            , username: profile.username\n            , provider: 'google'\n            , google: profile._json\n          })\n          user.save(function (err) {\n            if (err) console.log(err)\n            return done(err, user)\n          })\n        } else {\n          return done(err, user)\n        }\n      })\n    }\n  ));\n}"]],"start1":469,"start2":469,"length1":16,"length2":788}]],"length":1257,"saved":false}
